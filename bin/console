#!/usr/bin/ruby

# console - a script to get a console to a rails app running on the production environment
# Usage: ./console abc/growhealthy [production]
# Author: jtd/jl
# Created: 2/2/11

CONSOLE_SERVER = "tuna"

class Console

  attr_reader :name, :environment

  def initialize args
    fatal "Usage: ./console <application name> [<environment>]" unless args.size >= 1
    @name, @environment = *args

    run
  end

  def run
    info "getting a console for #{name} #{environment}..."
  end

  private

  def execute_in_parallel servers
    servers.map do |server|
      Thread.new(server) do |server|
        yield server
      end
    end.map {|thread| thread.join }
  end

  def remote_execute server, *command_array
    commands = command_array.join " && "

    if use_gateway
      command = %(ssh #{GATEWAY} 'ssh #{DEPLOY_USER}@#{server} "#{commands}"')
    else
      command = %(ssh #{DEPLOY_USER}@#{server} "#{commands}")
    end

    (pretending ? command : %x[#{command}]).split("\n").each do |result|
      info("[#{server}] #{result}")
    end
  end

  def unicorn
    if rails_2
      "unicorn_rails"
    else
      "unicorn"
    end
  end

  def deploy_directory
    directory = File.join BASE_PATH, name

    if environment == "production"
      directory
    else
      "#{directory}_#{environment}"
    end
  end

  def info message
    STDOUT.puts message
  end

  def fatal message
    info message
    exit 1
  end
end

Deployment.new ARGV
